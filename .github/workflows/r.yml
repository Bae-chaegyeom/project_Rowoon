# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: R

on:
  schedule:
    - cron: "0 0 * * 1-5"

jobs:
  generate-data:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-latest, r: "release" }
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      SLACK_URL: ${{ secrets.SLACK_URL }}
      SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
      SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
      RENV_PATHS_ROOT: ~/.local/share/renv

    steps:
      - uses: actions/checkout@v2

      - name: setup-r
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - run: R -e 'install.packages("renv")'

      - name: Cache packages
        uses: actions/cache@v1
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |-
            ${{ runner.os }}-renv-
      - run: sudo apt-get install -y --no-install-recommends libcurl4-openssl-dev
      - run: R -e 'renv::restore()'

      - run: |
          source("R/query.R")
        shell: Rscript {0}

      # - name: Set up R ${{ matrix.r-version }}
      #   uses: r-lib/actions/setup-r@v1
      #   env:
      #     ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
      #   with:
      #     r-version: ${{ matrix.R }}
      #     DB_NAME: ${{ secrets.DB_NAME }}

      # - name: Query dependencies
      #   run: |
      #     install.packages('remotes')
      #     install.packages('sessioninfo')
      #     saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
      #     writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
      #   shell: Rscript {0}
      # - name: Generate data
      #   run: |
      #     source("R/query.R")
      #   shell: Rscript {0}
